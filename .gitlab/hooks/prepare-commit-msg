#!/bin/bash

# This way you can customize which branches should be skipped when
# prepending commit message.
if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(master develop test release)
fi

BRANCH_NAME_FULL=$(git symbolic-ref --short HEAD)
BRANCH_NAME="${BRANCH_NAME_FULL##*/}"

BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")
BRANCH_IN_COMMIT=$(grep -c "\[$BRANCH_NAME\]" $1)

BRANCH_ISSUE=`echo $BRANCH_NAME|sed 's/.*\///g'|sed 's/-.*//g'`
BRANCH_TYPE="";

if [[ "$BRANCH_NAME_FULL" =~ / ]];
then
  BRANCH_TYPE="[`echo $BRANCH_NAME_FULL | sed 's/\/[0-9]*-.*//g'`]"
  BRANCH_TYPE=`echo $BRANCH_TYPE | awk '{ print toupper($0) }'`
fi

if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]];
then
  sed -i.bak -e "s/^/$BRANCH_TYPE\[#$BRANCH_ISSUE\] /" $1
fi
